---
title: "Day 8: Variability in estimates"
subtitle: "BSTA 511/611, OHSU"
author: "Meike Niederhausen, PhD"
date: "10/28/2024"
categories: ["Week 5"]
format: 
  html:
    link-external-newwindow: true
    toc: true
execute:
  echo: true
# editor: visual
editor_options: 
  chunk_output_type: console
---


```{r}
#| label: "setup"
#| include: false
knitr::opts_chunk$set(echo = TRUE, fig.height=3, fig.width=5, message = F)
```



## Load packages

* Packages need to be loaded _every time_ you restart R or render an Qmd file

```{r}
# run these every time you open Rstudio
library(tidyverse)    
library(oibiostat)
library(ggridges)
library(janitor)
library(rstatix)
library(knitr)
library(gtsummary)
library(moderndive) # NEW!!

set.seed(456)
```


- You can check whether a package has been loaded or not 
  - by looking at the Packages tab and 
  - seeing whether it has been checked off or not

# Goals for today

__Section 4.1__

* Sampling from a population
  * population parameters vs. point estimates
  * sampling variation

* Sampling distribution of the mean
  * Central Limit Theorem

## MoRitz's tip of the day: add a code pane in RStudio

Do you want to be able to view two code files side-by-side?  
You can do that by adding a column to the RStudio layout. 

See [https://posit.co/blog/rstudio-1-4-preview-multiple-source-columns/](https://posit.co/blog/rstudio-1-4-preview-multiple-source-columns/) for more information.

# Our hypothetical population: YRBSS

__[Youth Risk Behavior Surveillance System](https://www.cdc.gov/healthyyouth/data/yrbs/index.htm) (YRBSS)__

* Yearly survey conducted by the US Centers for Disease Control (CDC) 
* "A set of surveys that track behaviors that can lead to poor health in students grades 9 through 12."[^1]
* Dataset `yrbss` from `oibiostat` pacakge contains responses from _n_ = 13,572 participants in 2013 for a subset of the variables included in the complete survey data

[^1]: Youth Risk Behavior Surveillance System [https://www.cdc.gov/healthyyouth/data/yrbs/index.htm](https://www.cdc.gov/healthyyouth/data/yrbs/index.htm) (YRBSS)

```{r}
library(oibiostat)
data("yrbss")  #load the data
# ?yrbss
```

```{r}
dim(yrbss)
```

```{r}
names(yrbss)
```


## Getting to know the dataset: `glimpse()`

```{r}
glimpse(yrbss)  # from tidyverse package (dplyr)
```


## Height & weight variables

```{r}
yrbss %>% 
  select(height, weight) %>% 
  summary()
```

```{r}
ggplot(data = yrbss, 
       aes(x = height)) +
  geom_histogram() #<<
```



## Transform height & weight from metric to to standard

Also, drop missing values and add a column of id values
```{r}
yrbss2 <- yrbss %>%                 # save new dataset with new name
  mutate(                           # add variables for 
    height.ft = 3.28084*height,     #     height in feet
    weight.lb = 2.20462*weight      #     weight in pounds
  ) %>% 
  drop_na(height.ft, weight.lb) %>% # drop rows w/ missing height/weight values
  mutate(id = 1:nrow(.)) %>%        # add id column
  select(id, height.ft, weight.lb)  # restrict dataset to columns of interest

head(yrbss2)  
dim(yrbss2)
# number of rows deleted that had missing values for height and/or weight:
nrow(yrbss) - nrow(yrbss2) 
```


## `yrbss2` summary 

```{r}
summary(yrbss2)
```

Another summary:

```{r}
yrbss2 %>% 
  get_summary_stats(type = "mean_sd") %>% 
  kable()
```


## Random sample of size n = 5 from `yrbss2`

Take a random sample of size n = 5 from `yrbss2`:

```{r}
library(moderndive)
samp_n5_rep1 <- yrbss2 %>%
  rep_sample_n(size = 5, 
               reps = 1,
               replace = FALSE)
samp_n5_rep1
```

Calculate the mean of the random sample:
```{r}
means_hght_samp_n5_rep1 <- 
  samp_n5_rep1 %>% 
  summarise(mean_height = mean(height.ft))

means_hght_samp_n5_rep1
```

[Would we get the same mean height if we took another sample?]{style="color:purple"}


# Sampling variation

* If a different random sample is taken, the mean height (point estimate) will likely be different
    * this is a result of __[sampling variation]{style="color:darkorange"}__

Take a 2nd random sample of size n = 5 from `yrbss2`:
```{r}
samp_n5_rep1 <- yrbss2 %>%
  rep_sample_n(size = 5, 
               reps = 1,
               replace = FALSE)
samp_n5_rep1
```

Calculate the mean of the 2nd random sample:
```{r}
means_hght_samp_n5_rep1 <- 
  samp_n5_rep1 %>% 
  summarise(mean_height = mean(height.ft))

means_hght_samp_n5_rep1
```

[Did we get the same mean height with our 2nd sample?]{style="color:purple"}


## 100 random samples of size n = 5 from `yrbss2`

Take 100 random samples of size n = 5 from `yrbss2`:
```{r}
samp_n5_rep100 <- yrbss2 %>%
  rep_sample_n(size = 5, 
               reps = 100,
               replace = FALSE)
samp_n5_rep100
```

Calculate the mean for each of the 100 random samples:
```{r}
means_hght_samp_n5_rep100 <- 
  samp_n5_rep100 %>% 
  group_by(replicate) %>% 
  summarise(mean_height = mean(height.ft))

means_hght_samp_n5_rep100
```

[How close are the mean heights for each of the 100 random samples?]{style="color:purple"}

## Distribution of 100 sample mean heights (n = 5)

Describe the distribution shape. 
```{r}
ggplot(
  means_hght_samp_n5_rep100, 
  aes(x = mean_height)) + 
  geom_histogram()
```

Calculate the mean and SD of the 100 mean heights from the 100 samples:
```{r}
stats_means_hght_samp_n5_rep100 <- 
  means_hght_samp_n5_rep100 %>% 
  summarise(
   mean_mean_height = mean(mean_height),
   sd_mean_height = sd(mean_height)
   )
stats_means_hght_samp_n5_rep100
```

[Is the mean of the means close to the "center" of the distribution?]{style="color:purple"}


## 10,000 samples of size n = 5 from `yrbss2`

Take 10,000 random samples of size  
n = 5 from `yrbss2`:
```{r}
samp_n5_rep10000 <- yrbss2 %>%
  rep_sample_n(size = 5, 
               reps = 10000,
               replace = FALSE)
samp_n5_rep10000
```

Calculate the mean for each of the 10,000 random samples:
```{r}
means_hght_samp_n5_rep10000 <- 
  samp_n5_rep10000 %>% 
  group_by(replicate) %>% 
  summarise(mean_height = 
            mean(height.ft))

means_hght_samp_n5_rep10000
```

[How close are the mean heights for each of the 10,000 random samples?]{style="color:purple"}

## Distribution of 10,000 sample mean heights (n = 5)

Describe the distribution shape. 
```{r}
ggplot(
  means_hght_samp_n5_rep10000, 
  aes(x = mean_height)) + 
  geom_histogram()
```


Calculate the mean and SD of the 10,000 mean heights from the 10,000 samples:
```{r}
stats_means_hght_samp_n5_rep10000 <- 
  means_hght_samp_n5_rep10000 %>% 
  summarise(
   mean_mean_height=mean(mean_height),
   sd_mean_height = sd(mean_height)
   )
stats_means_hght_samp_n5_rep10000
```

[Is the mean of the means close to the "center" of the distribution?]{style="color:purple"}


## 10,000 samples of size n = 30 from `yrbss2`

Take 10,000 random samples of size  
n = 30 from `yrbss2`:
```{r}
samp_n30_rep10000 <- yrbss2 %>%
  rep_sample_n(size = 30, 
               reps = 10000,
               replace = FALSE)
samp_n30_rep10000
```

Calculate the mean for each of the 10,000 random samples:
```{r}
means_hght_samp_n30_rep10000 <- 
  samp_n30_rep10000 %>% 
  group_by(replicate) %>% 
  summarise(mean_height = 
            mean(height.ft))

means_hght_samp_n30_rep10000
```

[How close are the mean heights for each of the 10,000 random samples?]{style="color:purple"}


## Distribution of 10,000 sample mean heights (n = 30)

Describe the distribution shape. 
```{r}
ggplot(
  means_hght_samp_n30_rep10000, 
  aes(x = mean_height)) + 
  geom_histogram()
```

Calculate the mean and SD of the 10,000 mean heights from the 10,000 samples:
```{r}
stats_means_hght_samp_n30_rep10000<- 
  means_hght_samp_n30_rep10000 %>% 
  summarise(
   mean_mean_height=mean(mean_height),
   sd_mean_height = sd(mean_height)
   )
stats_means_hght_samp_n30_rep10000
```

[Is the mean of the means close to the "center" of the distribution?]{style="color:purple"}


## Compare distributions of 10,000 sample mean heights when n = 5 (left) vs. n = 30 (right)

[How are the center, shape, and spread similar and/or different?]{style="color:purple"}

```{r}
#| echo: false
ggplot(
  means_hght_samp_n5_rep10000, 
  aes(x = mean_height)) + 
  geom_histogram()

stats_means_hght_samp_n5_rep10000
```

```{r}
#| echo: false
ggplot(
  means_hght_samp_n30_rep10000, 
  aes(x = mean_height)) + 
  geom_histogram()

stats_means_hght_samp_n30_rep10000
```


## Sampling high schoolers' weights

Which figure is which?

* Population distribution of weights
* Sampling distribution of mean weights when $n=5$
* Sampling distribution of mean weights when $n=30$.

A
```{r}
#| echo: false
means_wght_samp_n30_rep10000 <- 
  samp_n30_rep10000 %>% 
  group_by(replicate) %>% 
  summarise(mean_weight = 
            mean(weight.lb))

# means_wght_samp_n30_rep10000
ggplot(
  means_wght_samp_n30_rep10000, 
  aes(x = mean_weight)) + 
  geom_histogram() +
  # theme(text=element_text(size=50))+
  labs(x = "")
```

B
```{r}
#| echo: false
means_wght_samp_n5_rep10000 <- 
  samp_n5_rep10000 %>% 
  group_by(replicate) %>% 
  summarise(mean_weight = 
            mean(weight.lb))

# means_wght_samp_n5_rep10000
ggplot(
  means_wght_samp_n5_rep10000, 
  aes(x = mean_weight)) + 
  geom_histogram() +
  # theme(text=element_text(size=50))+
  labs(x = "")
```

C
```{r}
#| echo: false
ggplot(data = yrbss2, 
       aes(x = weight.lb)) +
  geom_histogram() +
  # lab(title = "population distribution") +
  # theme(text=element_text(size=50)) +
  labs(x = "")
```



## The sampling distribution of the mean

* The __[sampling distribution]{style="color:darkorang"}__ of the mean is the distribution of sample means calculated from repeated random samples of _the same size_ from the same population

* Our simulations show approximations of the sampling distribution of the mean for various sample sizes

* The theoretical sampling distribution is based on all possible samples of a given sample size $n$.

```{r}
#| echo: false
ggplot(data = yrbss2, 
       aes(x = weight.lb)) +
  geom_histogram() +
  xlim(65, 400) +
  labs(title = "Population distribution")
```

```{r}
#| echo: false
ggplot(
  means_wght_samp_n30_rep10000, 
  aes(x = mean_weight)) + 
  geom_histogram() +
  xlim(65, 400)+
  labs(title = "Sampling distribution (n=30)") 
```


## The Central Limit Theorem (CLT) 

* For **"large" sample sizes** ( $n\geq 30$ ),
    * the __sampling distribution__ of the sample mean
    * can be approximated by a __normal distribution__,with 
      * _mean_ equal to the _population mean_ value $\mu$, and 
      * _standard deviation_ $\frac{\sigma}{\sqrt{n}}$


* For **small sample sizes**, if the population is known to be normally distributed, then
    * the __sampling distribution__ of the sample mean
    * is a __normal distribution__, with 
      * _mean_ equal to the _population mean_ value $\mu$, and 
      * _standard deviation_ $\frac{\sigma}{\sqrt{n}}$

## The cutest statistics video on YouTube

* _[Bunnies, Dragons and the 'Normal' World: Central Limit Theorem]{style="color:purple"}_ 
    * Creature Cast from the New York Times
    * [https://www.youtube.com/watch?v=jvoxEYmQHNM&feature=youtu.be](https://www.youtube.com/watch?v=jvoxEYmQHNM&feature=youtu.be)



## Sampling distribution of mean heights when n = 30 

```{r}
ggplot(
  means_hght_samp_n30_rep10000, 
  aes(x = mean_height)) + 
  geom_histogram()
```

CLT tells us that we can model the sampling distribution of mean heights using a normal distribution.

### Plot of theoretical sampling distribution
```{r}
mu <- 5.55
SE <- 0.34/sqrt(30)
sig <- round(SE, 2)

gg_samp_dist_heights <- ggplot(data.frame(x = c(mu-4*sig, mu+4*sig)), aes(x = x)) + 
  stat_function(fun = dnorm, 
                args = list(mean = mu, sd = sig)) + 
  stat_function(fun = dnorm, 
                args = list(mean = mu, sd = sig), 
                xlim = c(mu-4*sig, mu-2*sig), 
                geom = "area", fill = "darkblue") +
  stat_function(fun = dnorm, 
                args = list(mean = mu, sd = sig), 
                xlim = c(mu+2*sig, mu+4*sig), 
                geom = "area", fill = "darkblue") +
  stat_function(fun = dnorm, 
                args = list(mean = mu, sd = sig), 
                xlim = c(mu-2*sig, mu-1*sig), 
                geom = "area", fill = "darkgreen") +
  stat_function(fun = dnorm, 
                args = list(mean = mu, sd = sig), 
                xlim = c(mu+1*sig, mu+2*sig), 
                geom = "area", fill = "darkgreen")+
  stat_function(fun = dnorm, 
                args = list(mean = mu, sd = sig), 
                xlim = c(mu-1*sig, mu+1*sig), 
                geom = "area", fill = "orange") +
  scale_x_continuous(name ="mean height (ft)", 
                    breaks=c(mu-2*sig,mu-1*sig,mu, mu+1*sig, mu+2*sig)) +
  labs(title = "Sampling distribution", y = "") +
  scale_y_continuous(labels = NULL, breaks = NULL)

gg_samp_dist_heights   
```


### Mean and SD of population

```{r}
(mean_height.ft<-mean(yrbss2$height.ft))
(sd_height.ft <- sd(yrbss2$height.ft))
sd_height.ft/sqrt(30)
```

### Mean and SD of simulated sampling distribution


```{r}
stats_means_hght_samp_n30_rep10000<- 
  means_hght_samp_n30_rep10000 %>% 
  summarise(
   mean_mean_height=mean(mean_height),
   sd_mean_height = sd(mean_height)
   )
stats_means_hght_samp_n30_rep10000
```

## Why is the mean $\mu$ & the standard error $\frac{\sigma}{\sqrt{n}}$ ?




## Applying the CLT

What is the probability that for a random sample of 30 high schoolers, that their mean height is greater than 5.6 ft?

## Class Discussion

* Slide 21: match figures to distribution (Sampling high schoolers' weights)

Problems from Homework 4:

* R1: Youth weights (YRBSS)
* Book exercise: 4.2
* Non-book exercise: Ethan Allen
